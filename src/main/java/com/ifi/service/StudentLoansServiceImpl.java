/*
 * Created on 2018-09-27 ( Date ISO 2018-09-27 - Time 10:31:43 )
 * Generated by Telosys ( http://www.telosys.org/ ) version 3.0.0
*/
package com.ifi.service;



import java.util.List;

import javax.transaction.Transactional;

import com.ifi.entity.StudentLoans;
import com.ifi.repository.StudentLoansRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

@Service
@Transactional
public class StudentLoansServiceImpl implements StudentLoansService {

	@Autowired
	private StudentLoansRepository studentLoansRepository;

	@Override
	public StudentLoans getOne(Integer studentLoanId) {
		return studentLoansRepository.getOne(studentLoanId);
	}

	@Override
	public Boolean delete(Integer studentLoanId) {
		if (studentLoansRepository.getOne(studentLoanId) != null) {
			studentLoansRepository.deleteById(studentLoanId);
			return true;
		}
		return false;
	}

	@Override
	public StudentLoans create(StudentLoans studentLoans) {
		return studentLoansRepository.save(studentLoans);
	}

	@Override
	public StudentLoans update(StudentLoans studentLoansToUpdate) {
						StudentLoans studentLoans = studentLoansRepository.getOne(studentLoansToUpdate.getStudentLoanId());
																																														
				if(studentLoansToUpdate.getGuarantors() !=null) {
			
		}
				if(studentLoansToUpdate.getRefLoanStatus() !=null) {
			
		}
				if(studentLoansToUpdate.getStudents() !=null) {
			
		}
				if(studentLoansToUpdate.getStandardLoanId() !=null) {
			
		}
				if(studentLoansToUpdate.getStudentLoanAmount() !=null) {
			
		}
				if(studentLoansToUpdate.getStudentLoanPeriod() !=null) {
			
		}
				if(studentLoansToUpdate.getFistRepaymentDate() !=null) {
			
		}
				if(studentLoansToUpdate.getLastPaymentDate() !=null) {
			
		}
				if(studentLoansToUpdate.getStudentLoanComments() !=null) {
			
		}
				if(studentLoansToUpdate.getStudentLoanDetails() !=null) {
			
		}
				return studentLoansRepository.save(studentLoans);
	}

	@Override
	public Boolean exist(StudentLoans studentLoans) {
						return studentLoansRepository.existsById(studentLoans.getStudentLoanId());
																																													}

	@Override
	public List<StudentLoans> findAll() {
		return studentLoansRepository.findAll();
	}

}

